{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useIntersectionObserver = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useIntersectionObserver = function useIntersectionObserver(target, root) {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isIntersecting = _React$useState2[0],\n      setIntersecting = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    var observer = new IntersectionObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      if (entry.isIntersecting !== isIntersecting) {\n        setIntersecting(entry.isIntersecting);\n      }\n    }, {\n      rootMargin: '0px',\n      root: root.current\n    });\n\n    if (target.current) {\n      observer.observe(target.current);\n    }\n\n    return function () {\n      if (target.current) {\n        observer.unobserve(target.current);\n      }\n    };\n  }, []);\n\n  return isIntersecting;\n};\n\nexports.useIntersectionObserver = useIntersectionObserver;","map":{"version":3,"sources":["C:/Users/FPT SHOP/Documents/VSCode/Pet-Shop/node_modules/the-platform/useIntersectionObserver.js"],"names":["Object","defineProperty","exports","value","useIntersectionObserver","_react","_interopRequireDefault","require","obj","__esModule","default","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","target","root","_React$useState","useState","_React$useState2","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","_ref","_ref2","entry","rootMargin","current","observe","unobserve"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useIntersectionObserver = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useIntersectionObserver = function useIntersectionObserver(target, root) {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isIntersecting = _React$useState2[0],\n      setIntersecting = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    var observer = new IntersectionObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      if (entry.isIntersecting !== isIntersecting) {\n        setIntersecting(entry.isIntersecting);\n      }\n    }, {\n      rootMargin: '0px',\n      root: root.current\n    });\n\n    if (target.current) {\n      observer.observe(target.current);\n    }\n\n    return function () {\n      if (target.current) {\n        observer.unobserve(target.current);\n      }\n    };\n  }, []);\n\n  return isIntersecting;\n};\n\nexports.useIntersectionObserver = useIntersectionObserver;"]},"metadata":{},"sourceType":"script"}